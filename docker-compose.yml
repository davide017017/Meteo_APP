version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8090:80" # Mappa la porta 80 del container (Apache) alla porta 8090 dell'host
    volumes:
      - ./backend:/var/www/html # Monta la cartella locale 'backend' nella cartella web del container
    environment:
      - OPENWEATHERMAP_API_KEY=${OPENWEATHERMAP_API_KEY} # Passa la variabile d'ambiente per la chiave API

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Mappa la porta 3000 del container (Next.js) alla porta 3000 dell'host
    depends_on:
      - backend # Assicura che il backend sia avviato prima del frontend
    command: npm run dev # Comando per avviare il server di sviluppo di Next.js
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:80 # Imposta l'URL dell'API backend per il frontend
    develop: # Configurazione specifica per l'ambiente di sviluppo (potrebbe essere specifica per Docker Desktop o IDE)
      watch:
        - action: sync # Sincronizza i file tra host e container
          path: ./frontend
          target: /app
          ignore:
            - /app/node_modules
        - action: rebuild # Ricostruisce l'immagine se il Dockerfile del frontend cambia
          path: ./frontend/Dockerfile